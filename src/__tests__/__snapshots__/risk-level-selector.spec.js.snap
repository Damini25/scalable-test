// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render <InputSelector> 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div>
          <label>
            Risk level:
          </label>
          <select
            data-testid="risk-options-id"
            name="riskLevel"
          >
            3
            4
            5
            6
            7
          </select>
        </div>
        <div>
          <label>
            No. of years:
          </label>
          <input
            data-testid="years-id"
            max="1000"
            min="1"
            name="years"
            type="number"
            value="1"
          />
        </div>
        <div>
          <label>
            Initial Investment Sum:
          </label>
          <input
            max="10000"
            min="1"
            name="investmentSum"
            type="number"
            value="1000"
          />
        </div>
        <div>
          <label>
            Initial Monthly Sum:
          </label>
          <input
            max="10000"
            min="1"
            name="monthlySum"
            type="number"
            value="100"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div>
        <label>
          Risk level:
        </label>
        <select
          data-testid="risk-options-id"
          name="riskLevel"
        >
          3
          4
          5
          6
          7
        </select>
      </div>
      <div>
        <label>
          No. of years:
        </label>
        <input
          data-testid="years-id"
          max="1000"
          min="1"
          name="years"
          type="number"
          value="1"
        />
      </div>
      <div>
        <label>
          Initial Investment Sum:
        </label>
        <input
          max="10000"
          min="1"
          name="investmentSum"
          type="number"
          value="1000"
        />
      </div>
      <div>
        <label>
          Initial Monthly Sum:
        </label>
        <input
          max="10000"
          min="1"
          name="monthlySum"
          type="number"
          value="100"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
